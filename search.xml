<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Vue随笔]]></title>
    <url>%2F2015%2F11%2F08%2Fvue%2F</url>
    <content type="text"><![CDATA[Vue是什么?Vue.js是一套构建用户界面（view）的MVVM框架。Vue.js的核心库只关注视图层，并且非常容易学习，非常容易与其他库或已有的项目整合。vue谷歌调试插件vuetoolsVue 与 react相同点 （什么是以下特点？后期查资料）1.利用虚拟dom实现快速渲染2.轻量级3.响应式组件4.服务端渲染5.易于集成路由工具、打包工具以及状态管理工具 一、Vue.js的目的Vue.js的产生核心是为了解决如下三个问题： 解决数据绑定的问题； Vue.js框架生产的主要目的是为了开发大兴单页面应用（SPA：Single Page Application）Angular.js中对PC端支持的比较良好，但是对移动端支持就一般。而Vue.js主要支持移动端，也支持PC端。 它还支持组件化。也就是可以将页面封装成若干个组件，采用积木式编程，这样是页面的复用度达到最高（支持组件化）。二、Vue.js特性 MVVM模式M: model 业务模型，用处：处理数据，提供数据V: view 用户界面、用户视图业务模型model中的数据发生改变的时候，用户视图view也随之变化。用户视图view改变的时候，业务模型model中的数据也可以发生改变。 组件化 指令系统 Vue.js 2.0开始支持虚拟DOM（Vue.js 1.0 是操作的真是DOM，而不是虚拟DOM）虚拟DOM可以提升页面的刷新速度。三、入门语法篇使用Vue.js的步骤：第一步：在html页面中引入vue.js;第二步：Vue.js提供了一个Vue,我们需要创建一个对象。new Vue({}); 123456&lt;script&gt; var app = new Vue(&#123; el:"#demo",//声明vue.js管理的边界 data:&#123;&#125;//data核心作用是存放在页面中的数据,需要是一个对象 &#125;)&lt;/script&gt; 第三步：在用户界面view中，通过–双大括号–形式将data中的数据显示在页面中。在用户界面中， 双大括号–代码中绑定的data的key，而在页面中显示的是该key的value。Vue.js对获取的data与页面上显示的–双大括号–会产生一种映射关系。注： 双大括号–可以识别HTML标签；例：12&lt;div&gt;&#123;&#123;&#123;name&#125;&#125;&#125;&lt;/div&gt;data&#123;name：&lt;h1&gt;liqingyu&lt;/h1&gt;&#125; 12345678910111213&lt;div id=&quot;demo&quot;&gt;&#123;&#123;name&#125;&#125;,你好!!!&lt;/div&gt;//&#123;&#123;name&#125;&#125; vue中的 data的健名,当渲染之后会显示对应的值,当data中的name发生变化时,&#123;&#123;&#125;&#125;中的值也会随之变化&lt;script&gt; var app = new Vue(&#123; el:&quot;#demo&quot;,//声明vue管理的边界 data:&#123; name:&quot;liqingyu&quot; &#125;//data核心作用是存放显示在页面中的数据,需要是一个对象 &#125;)&lt;/script&gt;//app相当于data控制台修改:app.name = &quot;青宇&quot; //app这个变量会代理vue中的data数据&quot;青宇&quot;// 这样，如果我们要实现前后台交互，只要将从后台得到的数据，放在data中,页面就会自动绑定，这样就实现了从model-&gt;view的数据流向。四、指令指令，其实指的就是vue的v-开头的自定义属性。每个不同的属性都有各自不同的意义和功能。指令的语法：v-指令名称=”表达式判断或者是业务模型中属性名或者是事件名”1、 v-text作用：操作元素中的纯文本 快捷方式：12345678910111213141516171819202122232425262728&lt;h1 id=&quot;demo&quot; v-text=&quot;&apos;今年是&apos;+year+&apos;年&apos;+month+&apos;月&apos;&quot;&gt;&lt;/h1&gt;//v-text=&quot;&quot; 这里面的引号是vue界限符号,并非字符串引号,所以里面是字符串的时候需要另加引号&lt;script&gt; var app = new Vue(&#123; el:&quot;#demo&quot;, data:&#123; year:new Date().getFullYear(), month:new Date().getMonth()+1 &#125; &#125;)&lt;/script&gt;&lt;div id=&quot;demo&quot;&gt; &lt;p&gt;姓名:&#123;&#123;person.name&#125;&#125;&lt;/p&gt; &lt;p&gt;年龄:&#123;&#123;person.age&#125;&#125;&lt;/p&gt; &lt;p&gt;性别:&#123;&#123;person.sex&#125;&#125;&lt;/p&gt;&lt;/div&gt;&lt;script&gt; var app = new Vue(&#123; el:&quot;#demo&quot;, data:&#123; person:&#123; name:&quot;linqingyu&quot;, sex:&quot;男&quot;, age:18 &#125; &#125; &#125;)&lt;/script&gt; 2、v-html123456789&lt;div id=&quot;demo&quot; v-html=&quot;msg&quot;&gt;&lt;/div&gt;//处理元素内部的html,可以带标签 不是纯文本&lt;script&gt; var app = new Vue(&#123; el:&quot;#demo&quot;, data:&#123; msg:&apos;&lt;img src=&quot;&quot;&gt;&apos; &#125; &#125;)&lt;/script&gt; 3、v-bind作用：v-bind绑定页面中的元素属性。例如：a的href属性，img的src、alt和title属性。语法：v-bind:元素的属性名 = “data中键名”1234567891011121314&lt;div id=&quot;demo&gt; &lt;a v-bind=&quot;hrefvalue&quot;&gt;//用v-bind绑定标签属性:后面是参数(标签属性名) &lt;img v-bind:src=&quot;source&quot; alt=&quot;&quot;&gt; &lt;/a&gt;&lt;/div&gt;&lt;script&gt; var app = new Vue(&#123; el:&quot;#demo&quot;, data:&#123; hrefvalue:&quot;http://www.baidu.com&quot;, source:&quot;img/i.jpg&quot; &#125; &#125;)&lt;/script&gt; 123456789101112131415&lt;div id=&quot;demo&quot; v-bind:style=&quot;styles&quot;&gt;//控制css 你好&lt;/div&gt;&lt;script&gt; var app = new Vue(&#123; el:&quot;#demo&quot;, data:&#123; styles:&#123; //控制css的style需要是一个对象,里面是css属性名(如果属性名中有 - ,那么需要写成驼峰试命名法) color:&quot;red&quot;, fontSize:&quot;30px&quot;, fontWeight:&quot;normal&quot; &#125; &#125; &#125;)&lt;/script&gt; 在view模板中，可以使用简单的JS表单式，例如：12&lt;p&gt;&#123;&#123;num==1?&apos;我爱北京&apos;:&apos;我爱承德&apos;&#125;&#125;&lt;/p&gt;//在view模板中可以是简单js表达式 4、 v-show作用：通过判断，是否显示该内容。如果值为true，则显示。否则就隐藏。语法：v-show=”判断表达式”特点：元素会始终渲染在DOM中，只是被设置了display:none12345678910111213&lt;p id=&quot;demo&quot; v-show=&quot;seen&quot;&gt; //如果seen为true，而现实下方的内容，否则就隐藏 如意娘&lt;br&gt; 武则天&lt;br&gt; ...&lt;/p&gt;&lt;script&gt;var app = new Vue(&#123; el:&apos;#demo&apos;, data:&#123; seen:true &lt;!--如果seen为true，那么就显示 文字，否则就隐藏--&gt; &#125;&#125;)；&lt;!--隐藏的时候只是设置了display：none属性，该元素是依然存在的--&gt; 5、v-if作用：判断是否加载固定的内容。如果为真，则加载；为假时，则不加载。用处：用在权限管理，页面条件加载语法：v-if=”判断表达式”特点：控制元素插进来或者删除，而不是隐藏。template 标签是不会被渲染的例 :123&lt;template&gt; &lt;div v-if=&quot;true&quot;&gt;hello&lt;/div&gt;&lt;/template&gt; 在页面里只显示div不显示template标签v-show不支持template语法v-if与v-show的区别：一般来说，v-if有更高的切换消耗，安全性更高，而v-show有更多的初始化渲染消耗。因此，如果需要频繁切换而对安全性无要求，使用v-show。如果在运行时，条件不可能改变，则使用v-if较好。6、v-elsev-else必须紧跟在v-if后面也可以跟在v-show后面，否则他不能被识别。表示：当v-if的条件不成立的时候执行。7、v-for作用：控制html元素中的循环，实现诗句列表的生成。用法：view : v-for=”item in 集合”item: 集合的子项集合：被遍历的集合，通常为数组。用处：写在谁上，谁循环。123&lt;li v-for=&quot;singer in singers&quot;&gt; &#123;&#123;singer.no&#125;&#125; &#123;&#123;singer.name&#125;&#125;&lt;/li&gt; 数据12345678data：&#123; singers：[ &#123;no:1,name:&apos;王菲&apos;&#125;， &#123;no:2,name:&apos;谢霆锋&apos;&#125;， &#123;no：3，name：&apos;张柏芝&apos;&#125;， &#123;no：4，name：&apos;钟欣潼&apos;&#125; ]&#125; 123&lt;li v-for=&quot;(singer,index) in singers&quot;&gt; &lt;!--singer为集合的子项，index为集合的索引值--&gt; &#123;&#123;singer.no&#125;&#125; &#123;&#123;singer.name&#125;&#125; (索引值为：&#123;&#123;index&#125;&#125;)&lt;/li&gt; 8、v-on作用：对页面中的事件进行绑定语法： v-on:事件类型=“事件处理函数名”缩写： @事件类型=“事件处理函数名”123456789101112131415161718192021&lt;ul id=&quot;demo&quot;&gt; &lt;li v-on:click=&quot;clickme&quot;&gt;单击事件&lt;/li&gt; &lt;li&gt;双击事件&lt;/li&gt; &lt;li&gt;鼠标移入事件&lt;/li&gt;&lt;/ul&gt;&lt;!--click为时间类型--clickme为时间处理函数的名字--&gt;&lt;script&gt;var app = new Vue(&#123;\ el:&apos;#demo&apos;, data:&#123; &#125;, methods:&#123; clickme:function()&#123; consloe.log(&apos;单机事件&apos;) &#125; &#125; &lt;!--clickme为事件处理函数的名字也为methods中方法的名字--&gt;&#125;)&lt;/script&gt; 用法：在view中，用v-on:事件类型=”methods中的方法名字”在vue实例中，在methods中去监听：也就书写methods的该方法。123456&lt;li v-on:click=&quot;clickme&quot;&gt;单击事件&lt;/li&gt;&lt;li @dblclick=&quot;clickme&quot;&gt;双击事件&lt;/li&gt;&lt;!--@是v-on：的缩写--&gt;&lt;li v-on:mouseenter=&quot;enterme()&quot;&gt;鼠标移入事件&lt;/li&gt;&lt;li @mouseleave=&quot;leaveme(&apos;parameter&apos;)&quot;&gt;鼠标离开事件&lt;/li&gt;&lt;!--enterme()方法后面的()可加可不加。但是需要传参，就必须加--&gt; 9、v-model作用：接受用户输入的一些数据，直接就可以将这些数据挂在到data属性上。这样就产生了双向的数据绑定（当业务模型中的数据发生变化时，用户界面中的数据会发生变化；当用户界面中的数据变化时，业务模型中的数据也会发生变化）。语法：v-model = “data中的键名”在data中，最好也要定义这个属性，不然会报错。数据双向绑定时候， 首次绑定数据，不随数据变化(只绑定一次)；初始化时候绑定，再次更改时候不改变；10、销毁]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo笔记]]></title>
    <url>%2F2015%2F11%2F08%2FLee%2F</url>
    <content type="text"><![CDATA[官网Hexo! 快速开始创建一个新帖子1$ hexo new "My New Post" 运行服务器1$ hexo server 生成形态文件1$ hexo generate 部署到远程站点1$ hexo deploy 安装动态背景themes/next/layout/_layout.swig里面的header下面设置有四种背景：12345678910111213141516&#123;% if theme.canvas_nest %&#125; &lt;script type=&quot;text/javascript&quot; color=&quot;0,0,255&quot; opacity=&apos;0.7&apos; zIndex=&quot;-2&quot; count=&quot;99&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt;&#123;% endif %&#125;&#123;% if theme.canvas_nest %&#125; &lt;script type=&quot;text/javascript&quot; color=&quot;0,0,255&quot; opacity=&apos;0.7&apos; zIndex=&quot;-2&quot; count=&quot;99&quot; src=&quot;//cdn.bootcss.com/three_waves.js/1.0.0/three_waves.min.js&quot;&gt;&lt;/script&gt;&#123;% endif %&#125;&#123;% if theme.canvas_nest %&#125; &lt;script type=&quot;text/javascript&quot; color=&quot;0,0,255&quot; opacity=&apos;0.7&apos; zIndex=&quot;-2&quot; count=&quot;99&quot; src=&quot;//cdn.bootcss.com/canvas_lines.js/1.0.0/canvas_lines.min.js&quot;&gt;&lt;/script&gt;&#123;% endif %&#125;&#123;% if theme.canvas_nest %&#125; &lt;script type=&quot;text/javascript&quot; color=&quot;0,0,255&quot; opacity=&apos;0.7&apos; zIndex=&quot;-2&quot; count=&quot;99&quot; src=&quot;//cdn.bootcss.com/canvas_sphere.js/1.0.0/canvas_sphere.min.js&quot;&gt;&lt;/script&gt;&#123;% endif %&#125; 然后themes/next/_config.yml里面设置：1234567891011# Canvas-nestcanvas_nest: true# three_wavesthree_waves: false# canvas_linescanvas_lines: false# canvas_spherecanvas_sphere: false 重新：hexo clear —-hexo g—– hexo s 运行；安装主题123456789地址next主题：git clone https://github.com/iissnan/hexo-theme-next themes/next主题配置：theme: next主题模式：#scheme: Muse#scheme: Mistscheme: Pisces#scheme: Gemini]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
</search>
